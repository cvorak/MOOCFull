{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","props","newName","newNumber","handleInputNameChange","handleInputNumberChange","handleClick","value","onChange","type","onClick","Person","person","handleDelete","name","number","Persons","persons","filterText","handleDeleteOf","filter","p","toLowerCase","includes","map","key","id","Filter","text","handleChange","Notification","message","className","baseUrl","axios","get","then","res","data","newPerson","post","delete","put","App","useState","setPersons","setNewName","setNewNumber","setFilterText","notificationMessage","setNotificationMessage","useEffect","personService","returnedPersons","event","target","preventDefault","newPersonObj","window","confirm","find","updatedPerson","catch","err","setTimeout","n","returnedPerson","concat","response","error","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f415c270.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n    const {\r\n      newName,\r\n      newNumber,\r\n      handleInputNameChange,\r\n      handleInputNumberChange,\r\n      handleClick\r\n    } = props\r\n  \r\n    return (\r\n      <form>\r\n        <div>\r\n          name: <input\r\n            value={newName}\r\n            onChange={handleInputNameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          number: <input\r\n            value={newNumber}\r\n            onChange={handleInputNumberChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={handleClick}\r\n          >\r\n            add\r\n            </button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Person = ({ person, handleDelete }) => {\r\n    return (\r\n      <li>\r\n        {person.name} {person.number}\r\n        <button onClick={handleDelete}>delete</button>\r\n      </li>\r\n    )\r\n  }\r\n\r\nexport default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst Persons = ({ persons, filterText, handleDeleteOf }) => {\r\n  const rows = () => persons\r\n    .filter(p => p.name.toLowerCase().includes(filterText))\r\n    .map(p => <Person key={p.id} person={p} handleDelete={() => handleDeleteOf(p.id)} />)\r\n\r\n  return (\r\n    <ul>\r\n      {rows()}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({ text, handleChange }) => {\r\n    return (\r\n      <div>\r\n        filter shown with <input\r\n          value={text}\r\n          onChange={handleChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null;\r\n    }\r\n        \r\n    return (\r\n        <div className={message.type === 'error' ? 'notification error' : 'notification'} >\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => axios\r\n    .get(baseUrl)\r\n    .then(res => res.data)\r\n\r\nconst create = (newPerson) => axios\r\n    .post(baseUrl, newPerson)\r\n    .then(res => res.data)\r\n    \r\nconst remove = (id) => axios\r\n    .delete(`${baseUrl}/${id}`)\r\n\r\nconst update = (id, newPerson) => axios\r\n    .put(`${baseUrl}/${id}`, newPerson)\r\n    .then(res => res.data)\r\n\r\nexport default { getAll, create, remove, update }","import React, { useState, useEffect } from 'react'\r\nimport './App.css'\r\nimport PersonForm from './components/PersonForm'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\nimport personService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [filterText, setFilterText] = useState('')\r\n  const [notificationMessage, setNotificationMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(returnedPersons => setPersons(returnedPersons))\r\n  }, [])\r\n\r\n  const handleClick = (event) => {\r\n    event.preventDefault()\r\n    const newPersonObj = {\r\n      name: newName,\r\n      number: newNumber\r\n    }\r\n\r\n    if (persons.map(p => p.name).includes(newName)) {\r\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)) {\r\n        const id = persons.find(p => p.name === newName).id\r\n        personService\r\n          .update(id, newPersonObj)\r\n          .then(updatedPerson => {\r\n            setPersons(persons.map(p => p.id === id ? updatedPerson : p))\r\n            setNewName('')\r\n            setNewNumber('')\r\n          }).catch(err => {\r\n            setNotificationMessage({\r\n              text: `The person ${newPersonObj.name} does not exist on the server`, \r\n              type: 'error'\r\n            })\r\n            setTimeout(() => setNotificationMessage(null), 5000)\r\n            setPersons(persons.filter(n => n.id !== id))\r\n          })\r\n      }\r\n\r\n    } else {\r\n      personService.create(newPersonObj)\r\n        .then(returnedPerson => {\r\n          if (returnedPerson) {\r\n            setPersons(persons.concat(returnedPerson))\r\n            setNewName('')\r\n            setNewNumber('')\r\n            setNotificationMessage({\r\n              text: `Added ${returnedPerson.name}`,\r\n              type: 'success'\r\n          })\r\n            setTimeout(() => setNotificationMessage(null), 3000)\r\n          }\r\n        })\r\n        .catch(err => {\r\n          setNotificationMessage({\r\n            text: err.response.data.error,\r\n            type: 'error'\r\n          })\r\n          setTimeout(() => setNotificationMessage(null), 3000)\r\n        })\r\n    }\r\n  }\r\n\r\n  const handleInputNameChange = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  const handleInputNumberChange = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilterText(event.target.value)\r\n  }\r\n\r\n  const handleDeleteOf = (id) => {\r\n    if (!window.confirm(`Delete ${persons.find(p => p.id === id).name}`))\r\n      return\r\n\r\n    personService\r\n      .remove(id)\r\n      .then(setPersons(persons.filter(p => p.id !== id)))\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={notificationMessage} />\r\n      <Filter text={filterText} handleChange={handleFilterChange} />\r\n      <PersonForm\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleInputNameChange={handleInputNameChange}\r\n        handleInputNumberChange={handleInputNumberChange}\r\n        handleClick={handleClick}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        filterText={filterText}\r\n        persons={persons}\r\n        handleDeleteOf={handleDeleteOf}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}